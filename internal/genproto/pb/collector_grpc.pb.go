// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.12.4
// source: proto/collector.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	SaverService_CollectPosts_FullMethodName = "/post.SaverService/CollectPosts"
)

// SaverServiceClient is the client API for SaverService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SaverServiceClient interface {
	CollectPosts(ctx context.Context, in *CollectPostsRequest, opts ...grpc.CallOption) (*CollectPostsResponse, error)
}

type saverServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSaverServiceClient(cc grpc.ClientConnInterface) SaverServiceClient {
	return &saverServiceClient{cc}
}

func (c *saverServiceClient) CollectPosts(ctx context.Context, in *CollectPostsRequest, opts ...grpc.CallOption) (*CollectPostsResponse, error) {
	out := new(CollectPostsResponse)
	err := c.cc.Invoke(ctx, SaverService_CollectPosts_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SaverServiceServer is the server API for SaverService service.
// All implementations must embed UnimplementedSaverServiceServer
// for forward compatibility
type SaverServiceServer interface {
	CollectPosts(context.Context, *CollectPostsRequest) (*CollectPostsResponse, error)
	mustEmbedUnimplementedSaverServiceServer()
}

// UnimplementedSaverServiceServer must be embedded to have forward compatible implementations.
type UnimplementedSaverServiceServer struct {
}

func (UnimplementedSaverServiceServer) CollectPosts(context.Context, *CollectPostsRequest) (*CollectPostsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CollectPosts not implemented")
}
func (UnimplementedSaverServiceServer) mustEmbedUnimplementedSaverServiceServer() {}

// UnsafeSaverServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SaverServiceServer will
// result in compilation errors.
type UnsafeSaverServiceServer interface {
	mustEmbedUnimplementedSaverServiceServer()
}

func RegisterSaverServiceServer(s grpc.ServiceRegistrar, srv SaverServiceServer) {
	s.RegisterService(&SaverService_ServiceDesc, srv)
}

func _SaverService_CollectPosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CollectPostsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SaverServiceServer).CollectPosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SaverService_CollectPosts_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SaverServiceServer).CollectPosts(ctx, req.(*CollectPostsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SaverService_ServiceDesc is the grpc.ServiceDesc for SaverService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SaverService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "post.SaverService",
	HandlerType: (*SaverServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CollectPosts",
			Handler:    _SaverService_CollectPosts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/collector.proto",
}
