version: '3.8'

services:
  collector_app:
    build:
      context: ./docker/dev
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - ./.go/pkg:/go/pkg
      - ./.go-cache:/go-cache
    working_dir: /app
    ports:
      - "5050:5050"
    # networks:
    #   - app
    env_file:
      - .env
    environment:
      GOCACHE: /go-cache
    entrypoint: ["./docker/dev/entrypoint.sh", "./internal/collector/cmd/main.go"]

  post_app:
    build:
      context: ./docker/dev
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - ./.go/pkg:/go/pkg
      - ./.go-cache:/go-cache
    working_dir: /app
    ports:
      - "5040:5040"
    # networks:
    #   - app
    env_file:
      - .env
    environment:
      GOCACHE: /go-cache
    entrypoint: ["./docker/dev/entrypoint.sh", "./internal/post-grud/cmd/main.go"]


  api_gateway:
    build:
      context: ./docker/dev
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - ./.go/pkg:/go/pkg
      - ./.go-cache:/go-cache
      # - $GOPATH/pkg/mod/cache:/go/pkg/mod/cache
    working_dir: /app
    ports:
      - "5060:5060"

    # networks:
    #   - app
    # env_file:
    #   - .env
    environment:
      GOCACHE: /go-cache
    entrypoint: ["./docker/dev/entrypoint.sh", "./internal/api-gateway/cmd/main.go"]

  migrate:
    image: migrate/migrate
    volumes:
      - .:/app
    working_dir: /app
    env_file:
      - .env
    profiles:
      - donotstart

  db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: post_db
    ports:
      - "5432"
    # networks:
    #   - app
